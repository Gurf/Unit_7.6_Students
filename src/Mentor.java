import java.util.Random;

//наследник Person, реализует Staff
/*Этот класс описывает ментора, который проверяет задания студента,
отвечает на вопросы и делится дополнительными материалами.*/
public class Mentor extends Person implements Staff {
    private boolean mood;//настроение ментора
    private static Random constant_random;//Константа рандома

    /*По умолчанию вызывает родительский конструктор
    и присваивает ментору хорошее настроение*/
    public Mentor(String name, String surname, int age) {
        super(name, surname, age);
        this.mood = true;//конструктор по умолчанию присваивает ментору хорошее настроение
    }

//    Помочь студенту (переопределяет метод из интерфейса)
//Напечатать приободряющее сообщение, в сообщении должно быть имя студента
    @Override
    public void helpToStudent(/*ссылка на студента??*/) {
        System.out.println("Сконцентрируйся");
    }

    //    Проверить код
   /* Логика работы
➜ В начале метода рандомно генерируется какое-то число, если это число больше 1000, то настроение у ментора хорошее,
 иначе плохое.
            ➜ Если у ментора плохое настроение, то он задачу не принимает.
            Должно быть напечатано сообщение о том, что задача (в сообщении указать номер задачи) не принято
            и вернуть false.
            ➜ Иначе напечатать сообщение о том, что задача принята и вернуть true.*/
    private static boolean checkCode(Task zadanie) {
//Random используется для генерации случайных чисел
        Random random = new Random();
        random.nextInt(); //любое случайное число
//    random.nextInt(5); //случайное число не больше 5
//Ниже показано, как сгенерировать случайное число в интервале от 100 до 200
        int min = 100;
        int max = 3500;
        int diff = max - min;
        int i = random.nextInt(diff + 1);
        i += min;
        return (i > 1000);
    }
}
